{"version":3,"sources":["schedules/pages/UpdateSchedule.js"],"names":["validateSchema","Yup","shape","logo","url","title","required","description","min","startDate","Date","daysQty","scheduleList","of","presenter","startTime","endTime","etitle","stage","day","socialList","facebook","twitter","youtube","soundcloud","UpdatePlace","auth","useContext","AuthContext","useHttpClient","isLoading","error","sendRequest","clearError","useState","loadedSchedule","setLoadedSchedule","scheduleId","useParams","history","useHistory","setStartDate","useEffect","a","process","responseData","schedule","console","log","fetchSchedule","asOverlay","className","onClear","initialValues","validationSchema","validateOnChange","validateOnBlur","enableReinitialize","onSubmit","values","setSubmitting","JSON","stringify","Authorization","token","push","userId","isSubmitting","setFieldValue","touched","errors","handleChange","name","label","value","control","type","rows","htmlFor","selected","onChange","selectsStart","dateFormat","default","disabled"],"mappings":"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","file":"static/js/6.bf88a91f.chunk.js","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { Formik, Form } from \"formik\";\nimport DatePicker from \"react-datepicker\";\nimport * as Yup from \"yup\";\n\nimport NewScheduleList from \"../components/NewScheduleList\";\nimport FormControl from \"../../shared/components/FormElements/FormControl\";\nimport LogoUpload from \"../../shared/components/FormElements/LogoUpload\";\nimport Card from \"../../shared/components/UIElements/Card\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\n\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nconst validateSchema = Yup.object().shape({\n\tlogo: Yup.string().url(\"Something went wrong. Please try again\"),\n\ttitle: Yup.string().required(\"Please enter the name of your event\"),\n\tdescription: Yup.string()\n\t\t.min(10, \"Please enter a longer description (minimum of 10 characters\")\n\t\t.required(\"Please enter a brief description of your event\"),\n\tstartDate: Yup.date()\n\t\t.min(new Date(), \"Date must be in the future\")\n\t\t.required(\"A start date is required\"),\n\tdaysQty: Yup.number().required(\n\t\t\"Please enter the number of days of your event\"\n\t),\n\tscheduleList: Yup.array().of(\n\t\tYup.object().shape({\n\t\t\tpresenter: Yup.string().required(\n\t\t\t\t\"Please enter the name of the presenter or artist\"\n\t\t\t),\n\t\t\tstartTime: Yup.string().required(\"A start time is required\"),\n\t\t\tendTime: Yup.string().required(\"A finish time is required\"),\n\t\t\tetitle: Yup.string(),\n\t\t\tstage: Yup.string().required(\"A venue/stage is required\"),\n\t\t\tday: Yup.number().required(\"Please select the day\"),\n\t\t\tsocialList: Yup.object().shape({\n\t\t\t\tfacebook: Yup.string().url(\"A enter a valid link, including https://\"),\n\t\t\t\ttwitter: Yup.string().url(\"A enter a valid link, including https://\"),\n\t\t\t\tyoutube: Yup.string().url(\"A enter a valid link, including https://\"),\n\t\t\t\tsoundcloud: Yup.string().url(\n\t\t\t\t\t\"A enter a valid link, including https://\"\n\t\t\t\t),\n\t\t\t}),\n\t\t})\n\t),\n});\n\nconst UpdatePlace = () => {\n\tconst auth = useContext(AuthContext);\n\tconst { isLoading, error, sendRequest, clearError } = useHttpClient();\n\tconst [loadedSchedule, setLoadedSchedule] = useState();\n\tconst scheduleId = useParams().scheduleId;\n\tconst history = useHistory();\n\tconst [startDate, setStartDate] = useState();\n\n\tuseEffect(() => {\n\t\tconst fetchSchedule = async () => {\n\t\t\ttry {\n\t\t\t\tconst responseData = await sendRequest(\n\t\t\t\t\t`${process.env.REACT_APP_BACKEND_URL}/schedules/${scheduleId}`\n\t\t\t\t);\n\t\t\t\tsetLoadedSchedule(responseData.schedule);\n\t\t\t\tsetStartDate(new Date(responseData.schedule.startDate));\n\t\t\t} catch (err) {\n\t\t\t\tconsole.log(err);\n\t\t\t}\n\t\t};\n\t\tfetchSchedule();\n\t}, [history, scheduleId, sendRequest]);\n\n\tif (isLoading) {\n\t\treturn <LoadingSpinner asOverlay={true} />;\n\t}\n\n\tif (!loadedSchedule && !error) {\n\t\treturn (\n\t\t\t<div className='center'>\n\t\t\t\t<Card>\n\t\t\t\t\t<h2>Schedule could not be found</h2>\n\t\t\t\t</Card>\n\t\t\t</div>\n\t\t);\n\t}\n\n\treturn (\n\t\t<div className='max-w-screen-md w-full mx-auto flex flex-col'>\n\t\t\t<ErrorModal error={error} onClear={clearError} />\n\t\t\t<h1 className='pl-8 mb-4'>Update Event</h1>\n\t\t\t<Formik\n\t\t\t\tinitialValues={{\n\t\t\t\t\tlogo: loadedSchedule.logo,\n\t\t\t\t\ttitle: loadedSchedule.title,\n\t\t\t\t\tdescription: loadedSchedule.description,\n\t\t\t\t\tstartDate: loadedSchedule.startDate,\n\t\t\t\t\tdaysQty: loadedSchedule.daysQty,\n\t\t\t\t\tscheduleList: loadedSchedule.scheduleList,\n\t\t\t\t}}\n\t\t\t\tvalidationSchema={validateSchema}\n\t\t\t\tvalidateOnChange={false}\n\t\t\t\tvalidateOnBlur={false}\n\t\t\t\tenableReinitialize\n\t\t\t\tonSubmit={async (values, { setSubmitting }) => {\n\t\t\t\t\tsetSubmitting({ values });\n\t\t\t\t\ttry {\n\t\t\t\t\t\tawait sendRequest(\n\t\t\t\t\t\t\t`${process.env.REACT_APP_BACKEND_URL}/schedules/${scheduleId}`,\n\t\t\t\t\t\t\t\"PATCH\",\n\t\t\t\t\t\t\tJSON.stringify({ ...values }),\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\t\t\t\t\tAuthorization: \"Bearer \" + auth.token,\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\t\t\t\t\t\thistory.push(\"/\" + auth.userId + \"/schedules\");\n\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\tconsole.log(err);\n\t\t\t\t\t}\n\t\t\t\t\tsetSubmitting(false);\n\t\t\t\t}}>\n\t\t\t\t{({\n\t\t\t\t\tvalues,\n\t\t\t\t\tisSubmitting,\n\t\t\t\t\tsetFieldValue,\n\t\t\t\t\ttouched,\n\t\t\t\t\terrors,\n\t\t\t\t\thandleChange,\n\t\t\t\t}) => (\n\t\t\t\t\t<Form className='bg-gray-900 shadow-md rounded-lg px-8 pt-6 pb-8 mb-4 w-full mt-20'>\n\t\t\t\t\t\t{isLoading && <LoadingSpinner asOverlay={true} />}\n\t\t\t\t\t\t<div className='flex flex-wrap -mx-3 mb-4'>\n\t\t\t\t\t\t\t<div className='w-full md:w-2/12 px-3 mb-6 md:mb-0'>\n\t\t\t\t\t\t\t\t<LogoUpload name='logo' label='Event Logo' value={values.logo} />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"w-full md:pl-1 md:w-10/12\">\n\t\t\t\t\t\t\t\t<div className='mb-4'>\n\t\t\t\t\t\t\t\t\t<FormControl\n\t\t\t\t\t\t\t\t\t\tcontrol='input'\n\t\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\t\tlabel='Title'\n\t\t\t\t\t\t\t\t\t\tname='title'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className='mb-4'>\n\t\t\t\t\t\t\t\t\t<FormControl\n\t\t\t\t\t\t\t\t\t\tcontrol='textarea'\n\t\t\t\t\t\t\t\t\t\tlabel='Description'\n\t\t\t\t\t\t\t\t\t\tname='description'\n\t\t\t\t\t\t\t\t\t\trows='3'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className='flex flex-wrap -mx-3 mb-4'>\n\t\t\t\t\t\t\t\t\t<div className='w-full md:w-1/2 px-3 mb-6 md:mb-0'>\n\t\t\t\t\t\t\t\t\t\t<label\n\t\t\t\t\t\t\t\t\t\t\thtmlFor='startDate'\n\t\t\t\t\t\t\t\t\t\t\tclassName='text-gray-400 block w-full'>\n\t\t\t\t\t\t\t\t\t\t\tStart Date\n\t\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t\t<DatePicker\n\t\t\t\t\t\t\t\t\t\t\tselected={startDate}\n\t\t\t\t\t\t\t\t\t\t\tonChange={(startDate) => {\n\t\t\t\t\t\t\t\t\t\t\t\tsetFieldValue(\"startDate\", startDate);\n\t\t\t\t\t\t\t\t\t\t\t\tsetStartDate(startDate);\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\tselectsStart\n\t\t\t\t\t\t\t\t\t\t\tstartDate={startDate}\n\t\t\t\t\t\t\t\t\t\t\tdateFormat='dd/MM/yyyy'\n\t\t\t\t\t\t\t\t\t\t\tname='startDate'\n\t\t\t\t\t\t\t\t\t\t\tclassName='form-input mt-1 block w-full bg-gray-800 text-gray-400 rounded-md border-none p-3'\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t{errors.startDate && touched.startDate ? (\n\t\t\t\t\t\t\t\t\t\t\t<p className='text-red-500 text-xs italic'>\n\t\t\t\t\t\t\t\t\t\t\t\t{errors.startDate}\n\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className='w-full md:w-1/2 px-3'>\n\t\t\t\t\t\t\t\t\t\t<FormControl\n\t\t\t\t\t\t\t\t\t\t\tcontrol='input'\n\t\t\t\t\t\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\t\t\t\t\t\tlabel='How many days is the event?'\n\t\t\t\t\t\t\t\t\t\t\tname='daysQty'\n\t\t\t\t\t\t\t\t\t\t\tmin='1'\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<h2 className='py-4'>Update Event List</h2>\n\t\t\t\t\t\t<NewScheduleList\n\t\t\t\t\t\t\tvalues={values}\n\t\t\t\t\t\t\tsetFieldValue={setFieldValue}\n\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t<Button default disabled={isSubmitting} type='submit'>\n\t\t\t\t\t\t\tSubmit\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Form>\n\t\t\t\t)}\n\t\t\t</Formik>\n\t\t</div>\n\t);\n};\n\nexport default UpdatePlace;\n"],"sourceRoot":""}